import streamlit as st
import colorsys
from PIL import Image
import numpy as np
import json

# Bet√∂ltj√ºk a sz√≠nek jelent√©s√©t (colors.json f√°jlb√≥l)
def load_color_meanings():
    try:
        with open("colors.json", "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {}

color_meanings = load_color_meanings()

st.title("üåà Codex-Ra ‚Äì Color Frequency Analyzer")

uploaded_file = st.file_uploader("üì∏ T√∂lts fel egy k√©pet elemz√©shez", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Felt√∂lt√∂tt k√©p", use_column_width=True)

    # K√©p numpy t√∂mbb√© alak√≠t√°sa
    img_array = np.array(image)
    pixels = img_array.reshape(-1, 3)

    # √Åtlag sz√≠n
    avg_color = pixels.mean(axis=0).astype(int)
    hex_color = '#%02x%02x%02x' % tuple(avg_color)

    st.markdown(f"üé® **Domin√°ns √°tlag sz√≠n:** `{hex_color}`")
    st.color_picker("Sz√≠n el≈ën√©zet", hex_color, disabled=True)

    # Megn√©zz√ºk van-e jelent√©s hozz√°
    if hex_color.lower() in color_meanings:
        short_text = color_meanings[hex_color.lower()]["short"]
        long_text = color_meanings[hex_color.lower()]["long"]

        st.markdown(f"**üåü R√∂vid jelent√©s:** {short_text}")
        with st.expander("üìñ R√©szletesebb √©rtelmez√©s"):
            st.write(long_text)
    else:
        st.info("Ehhez a sz√≠nhez m√©g nincs jelent√©s az adatb√°zisban.")
